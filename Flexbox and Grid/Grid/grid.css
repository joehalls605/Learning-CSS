/*
The CSS Grid Layout is a powerful system for creating complex, responsive web layouts. 
It allows you to define a grid structure with rows and columns, and then place your content within this grid.

Basic Concepts:
Grid Container: The parent element with display: grid;.
Grid Items: The direct children of the grid container, placed within the defined grid structure.

You define grids in two ways:
*/

/*
Way one:
Directly define the size of each column.
*/
.grid-container{
    display: grid; /* Defines the container as a gird*/

    /* Defines the number and size of columns in the grid. */
    grid-template-columns: 100px 100px 100px; /* Three columns, each 100px wide */

    /* Defines the number and size of rows in the grid */
    grid-template-rows: auto auto; /* Two rows with automatic height */

    gap: 10px; /* gap size between grid items*/
}
.grid-item{
    background-color: aliceblue;
    padding: 20px;
    border: 1px solid black;
}

/*
Way two:
Directly define the size of each column.
*/

.grid-container{
    display: grid; 
    grid-template-columns: repeat(3, 100px); /* Three columns, each 100px wide */
    grid-template-rows: auto auto; /* Two rows with automatic height */
}
.grid-item{
    background-color: aliceblue;
    padding: 20px;
    border: 1px solid black;
}

/* If I want the columns to be flexible, and their size adjust relative to available space in container. I use fr.
This would creat ethree columns, taking up one thrid of the space. */


.grid-container{
    display: grid; 
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: auto auto; /* Two rows with automatic height */
}


