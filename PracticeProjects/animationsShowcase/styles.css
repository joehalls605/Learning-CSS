body{
    font-family: Arial, Helvetica, sans-serif;
    text-align: center;
    background-color: #f9f9f9;
    margin: 0;
    padding: 0;
}

h1{
    margin: 20px;
    color: #333;
}

.animation-grid{
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    /* auto-fit tries to fit as many columns possible within the container width
    If there is extra space, the columns stretch to fit the space. If there isn't enough space, fewer columns are shown
    minmax means each column will be 150 pixels wide
    1fr means each column can grow to take up any remaining free space
    */
    gap: 20px;
    padding: 20px;
    max-width: 1000px;
    margin: 0 auto;
}

.animation-card{
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    padding: 20px;
    display: flex;
    justify-content: center; /* horizontal axis*/
    align-items: center; /* vertical axis*/
    height: 150px;
    transition: transform 0.3s ease;
}

.animation-card p {
    margin: 0;
    font-weight: bold;
    color: #555;
  }

.animation-card:hover {
    transform: scale(1.05);
}

/* Animations */

/* Fade in*/
@keyframes fadeIn{
    from{
        opacity: 0;
    }
    to{
        opacity: 1;
    }
}

.fade-in{
    animation: fadeIn 2s ease;
}

/* Bounce */
@keyframes bounce{
    0%, 100%{
        transform: translateY(0); /* Original and final position*/
    }
    50%{
        transform: translateY(-20px); /* at the 50% mark through the animation */
    }
}

.bounce{
    animation: bounce 1s infinite ease-in-out;
}

/* Spin */
@keyframes spin{
   from{
    transform: rotate(0deg);
   }
   to{
    transform: rotate(360deg);
   }
}

.spin{
    animation: spin 2s linear infinite; /* Linear means a constant time from start to finish */
}

@keyframes slideIn{
   from{
    transform: translateX(-100%);
   }
   to{
    transform: translate(0);
   }
}

.slide-in{
    animation: slideIn 1s ease-in-out /* Slide in from the left over 1 second */
}

@keyframes grow{
    from{
        transform: scale(1);
    }
    to{
        transform: scale(1.2);
    }
}

.grow{
    animation: grow 1s infinite alternate ease-in-out; /* Alternate means the animation will play forwards and then backwards */
}

@keyframes wiggle{
    0%{
        transform: rotate(0deg);
    }
    25%{
        transform: rotate(-5deg);
    }
    50%{
        transform: rotate(5deg);
    }
    75%{
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(0deg);
      }
}

.wiggle {
    animation: wiggle 1s infinite ease-in-out;
  }